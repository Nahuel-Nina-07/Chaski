// <auto-generated />
using System;
using Chaski.Infrastructure.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chaski.Infrastructure.Database.EntityFramework.Migrations
{
    [DbContext(typeof(ChaskiDbContext))]
    [Migration("20250422063110_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.RefreshTokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("createdByIp");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2")
                        .HasColumnName("expires");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("lastModifiedBy");

                    b.Property<DateTime>("LastModifiedByAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifiedAt");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("replacedByToken");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2")
                        .HasColumnName("revoked");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("revokedByIp");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "Expires", "Revoked");

                    b.ToTable("RefreshToken", "USERS");
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("lastModifiedBy");

                    b.Property<DateTime>("LastModifiedByAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifiedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Role", "USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 22, 6, 31, 7, 596, DateTimeKind.Utc).AddTicks(7799),
                            CreatedBy = 1,
                            Description = "Administrator role",
                            LastModifiedBy = 1,
                            LastModifiedByAt = new DateTime(2025, 4, 22, 6, 31, 7, 596, DateTimeKind.Utc).AddTicks(8602),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 22, 6, 31, 7, 596, DateTimeKind.Utc).AddTicks(8896),
                            CreatedBy = 1,
                            Description = "Standard user role",
                            LastModifiedBy = 1,
                            LastModifiedByAt = new DateTime(2025, 4, 22, 6, 31, 7, 596, DateTimeKind.Utc).AddTicks(8897),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("EmailConfirmationToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("emailConfirmationToken");

                    b.Property<DateTime?>("EmailConfirmationTokenExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("emailConfirmationTokenExpiry");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("isEmailConfirmed");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("lastModifiedBy");

                    b.Property<DateTime>("LastModifiedByAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifiedAt");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("passwordHash");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("passwordResetTokenExpiry");

                    b.Property<string>("PasswordResetTokenHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("passwordResetTokenHash");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("User", "USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(4616),
                            CreatedBy = 1,
                            Email = "admin@chaski.com",
                            IsEmailConfirmed = true,
                            LastModifiedBy = 1,
                            LastModifiedByAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(4618),
                            PasswordHash = "4wNW1FamP/hcDSqJsJ/Ofw==:g5tT5vgj0Z6IGM9sumOmEkF0Qzw226R0QpjXc983RTs=",
                            Status = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(4649),
                            CreatedBy = 1,
                            Email = "user@chaski.com",
                            IsEmailConfirmed = true,
                            LastModifiedBy = 1,
                            LastModifiedByAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(4650),
                            PasswordHash = "t+7vJAtbb3+wBmD+ux67AQ==:aHK3Y4d3U8JYEZmLVD2deM8JiCGaF6I78MHp7jEkc/A=",
                            Status = 1,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.UserRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("lastModifiedBy");

                    b.Property<DateTime>("LastModifiedByAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifiedAt");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(8525),
                            CreatedBy = 1,
                            LastModifiedBy = 1,
                            LastModifiedByAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(8527),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(8544),
                            CreatedBy = 1,
                            LastModifiedBy = 1,
                            LastModifiedByAt = new DateTime(2025, 4, 22, 6, 31, 9, 123, DateTimeKind.Utc).AddTicks(8545),
                            RoleId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.RefreshTokenEntity", b =>
                {
                    b.HasOne("Chaski.Infrastructure.Database.Entities.Users.UserEntity", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.UserRoleEntity", b =>
                {
                    b.HasOne("Chaski.Infrastructure.Database.Entities.Users.RoleEntity", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chaski.Infrastructure.Database.Entities.Users.UserEntity", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.RoleEntity", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Chaski.Infrastructure.Database.Entities.Users.UserEntity", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
